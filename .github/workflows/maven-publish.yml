# 相当于脚本用途的一个声明
name: Maven Central Repo Deployment
# 触发脚本的事件  这里为发布release之后触发
on:
  push:
    branches:
      - main
      # 定义一个发行任务

concurrency: '1'
jobs:
  release:
    # 运行处理流程的 OS 环境
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1.4.0
        with:
          server_id: 'ossrh-gomro'
          maven_goals_phases: 'clean deploy'  #需要发布时使用 clean deploy
          # 部署哪个 写哪个项目
          # actuator-version,bus-api,commons-all,restful-api,thin-log,utils
          maven_args: '-DskipTests -pl bus-api,restful-api,utils'  # 发布时更新 -pl + 项目
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}    # GPG 密钥
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}      # 自己设置的 GPG 密码
          nexus_username: ${{ secrets.NEXUS_USERNAME }}      # sonatype 用户名
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}      # sonatype 登录密码

      - name: Release Commons All
        uses: samuelmeuli/action-maven-publish@v1.4.0
        with:
          server_id: 'ossrh-gomro'
          maven_goals_phases: 'clean deploy'  #需要发布时使用 clean deploy
          # 部署统一依赖项目
          maven_args: '-DskipTests -pl commons-all'  # 发布时更新 -pl + 项目
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}    # GPG 密钥
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}      # 自己设置的 GPG 密码
          nexus_username: ${{ secrets.NEXUS_USERNAME }}      # sonatype 用户名
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}      # sonatype 登录密码
